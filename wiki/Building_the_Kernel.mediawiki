---
title: Building the Kernel
---

If you are only interested in using Linux/PARISC then please see the [http://www.parisc-linux.org/software/index.html software] information web page.

Pre-built 2.6 kernels are available on our [http://cvs.parisc-linux.org/download/linux-2.6/ CVS download Server] and via <tt>apt-get install kernel-image-XX</tt> (where XX is something like "2.4.25-32" or "2.6.6-32"). Most users should be pretty happy with kernels they can get from either source.

We no longer advise using the [http://www.parisc-linux.org/software/index.html#xcs pre-built cross compiler] to build a parisc kernel on an x86 linux host. Native compiler/linker tools are better maintained. The old mini-howto describes how to [http://www.parisc-linux.org/kernel/nfsroot.html cross-build kernels] for Net Boot. Please only bother with this if you have a very slow parisc machine and very fast x86 machine.

= Prerequisites For Building Kernels =
* Internet connection
* hppa-debian host properly configured so apt-get and ftp work
* [http://cvs.parisc-linux.org/ parisc-linux source]

= Short Recipe to Build a Kernel =
The short recipe is for when existing kernels from [http://cvs.parisc-linux.org/download/linux-2.6/ CVS download Server] or debian package pool don't have needed config "defaults" or need a different selection of kernel modules. If you want to do more than that, read "The Old, Grotty Way" as well (below).
<pre>
# get necessary tools
apt-get install kernel-package gcc binutils libc6-dev
cd /usr/src
# if CVS doesn't work, See "Getting Source" below.
cvs -d :pserver:anonymous@cvs.parisc-linux.org:/var/cvs login
cvs -d :pserver:anonymous@cvs.parisc-linux.org:/var/cvs co linux-2.4
cd linux-2.4
# adjust a new .config file
make menuconfig
# or do it by hand:
#	vi .config
#	make oldconfig
make-kpkg kernel_image
cd ..
dpkg -i kernel-image*.deb
sync
reboot
</pre>
= The Old, Grotty Way To Build a Kernel =
Here are all the ugly details developers care about in order to '''modify, build, test''' parisc-linux kernels. Note that just because a kernel option can be select, does NOT mean it works. Trial and error is usually the only sure way to find out. Reports of such adventures are always welcome on the parisc-linux [mailto:linux-parisc@vger.kernel.org mailing list].
# '''Install tools'''
<pre>
apt-get install kernel-package gcc binutils lib6-dev
</pre>
# '''Fetch kernel source''': The 2.6.x kernel source tree is available via [http://cvs.parisc-linux.org/ CVS] and [http://cvs.parisc-linux.org/download/linux-2.6/ snapshots]. It is better to get a snapshot first and then update using CVS.
<pre>
cd /usr/src
# See http://cvs.parisc-linux.org/download/linux-2.6/
wget http://cvs.parisc-linux.org/download/linux-2.6/linux-2.6.6-pa2.tar.bz2
# verify ~350MB free
df -h .
tar xjf linux-2.6.6-pa2.tar.bz2
</pre>
# '''Configure Kernel Options'''
<pre>
cd /usr/src/linux-2.6
# clone the nearest _config to start with
cp arch/parisc/configs/b180_config .config
# You can also "make config" or "make menuconfig" here
# to adjust the .config if kernel defaults don't suit you.
make oldconfig
</pre>
# '''Build Kernel Executables'''
<pre>
# 2.6.x
make

# 2.4.x needs several steps instead:
#	make -j2 dep && make vmlinux && make modules
 
# must be root user
make modules_install
</pre>
# '''Installing the kernel'''
The resulting kernel image is <tt>/usr/src/linux-2.6/vmlinux</tt>. Normally, x86-linux will save the existing vmlinux and install the new kernel with <tt>make install</tt>. The "dpkg -i" steps above do about the same thing. Here is one way to do it manually:
<pre>
cd /boot
mv vmlinux vmlinux.old
mv System.map System.map.old
cd /usr/src/linux-2.6
cp System.map vmlinux /boot/
sync
reboot
</pre>
''NOTE: One does not need to run palo when replacing an existing kernel.''

Another way is to rename <tt>vmlinux</tt> with revision info, reboot, interrupt autoboot and specify interactive boot, specify the new kernel via palo, and finally once the new kernel is booted, modify <tt>/etc/palo.conf</tt> to match (and run <tt>palo</tt> again). Start with something like:
<pre>
cp vmlinux /boot/vmlinux-2.6.6-pa1
cp System.map /boot/System.map-2.6.6-pa1
cp .config /boot/config-2.6.6-pa1
sync
reboot
...
</pre>